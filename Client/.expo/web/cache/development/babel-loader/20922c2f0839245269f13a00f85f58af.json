{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { React, useState } from \"react\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function DataMobile() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      datePicker = _useState2[0],\n      setDatePicker = _useState2[1];\n\n  var _useState3 = useState(new Date()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setDate = _useState4[1];\n\n  function onDateSelected(event, value) {\n    if ((event == null ? void 0 : event.type) === \"dismissed\") {\n      setDate(date);\n      return;\n    }\n\n    setDate(value);\n    setDatePicker(false);\n  }\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(DateTimePicker, {\n      value: data,\n      mode: \"date\",\n      display: Platform.OS === \"ios\" ? \"spinner\" : \"default\",\n      is24Hour: true,\n      onChange: onDateSelected,\n      style: styles.datePicker\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#DFDFDF\"\n  },\n  datePicker: {\n    backgroundColor: \"#F5F5F5\",\n    width: \"60%\",\n    marginBottom: 15,\n    color: \"#000000\",\n    fontSize: 17,\n    borderRadius: 10,\n    borderColor: \"#004A85\",\n    borderWidth: 1,\n    padding: 10\n  }\n});","map":{"version":3,"names":["React","useState","DateTimePicker","DataMobile","datePicker","setDatePicker","Date","data","setDate","onDateSelected","event","value","type","date","styles","container","Platform","OS","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","width","marginBottom","color","fontSize","borderRadius","borderColor","borderWidth","padding"],"sources":["C:/Users/aline/OneDrive/√Årea de Trabalho/TurisInfo_TCC/client/components/DataMobile.js"],"sourcesContent":["import {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  Platform,\r\n} from \"react-native\";\r\nimport { React, useState } from \"react\";\r\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\r\n\r\nexport default function DataMobile() {\r\n  const [datePicker, setDatePicker] = useState(false);\r\n  const [data, setDate] = useState(new Date());\r\n\r\n  function onDateSelected(event, value) {\r\n    if (event?.type === \"dismissed\") {\r\n      setDate(date);\r\n      return;\r\n    }\r\n    setDate(value);\r\n    setDatePicker(false);\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <DateTimePicker\r\n        value={data}\r\n        mode={\"date\"}\r\n        display={Platform.OS === \"ios\" ? \"spinner\" : \"default\"}\r\n        is24Hour={true}\r\n        onChange={onDateSelected}\r\n        style={styles.datePicker}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#DFDFDF\",\r\n  }, \r\n  datePicker: {\r\n    backgroundColor: \"#F5F5F5\",\r\n    width: \"60%\",\r\n    marginBottom: 15,\r\n    color: \"#000000\",\r\n    fontSize: 17,\r\n    borderRadius: 10,\r\n    borderColor: \"#004A85\",\r\n    borderWidth: 1,\r\n    padding: 10,\r\n  },\r\n});\r\n"],"mappings":";;;;;;;AAQA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,wCAA3B;;AAEA,eAAe,SAASC,UAAT,GAAsB;EACnC,gBAAoCF,QAAQ,CAAC,KAAD,CAA5C;EAAA;EAAA,IAAOG,UAAP;EAAA,IAAmBC,aAAnB;;EACA,iBAAwBJ,QAAQ,CAAC,IAAIK,IAAJ,EAAD,CAAhC;EAAA;EAAA,IAAOC,IAAP;EAAA,IAAaC,OAAb;;EAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+BC,KAA/B,EAAsC;IACpC,IAAI,CAAAD,KAAK,QAAL,YAAAA,KAAK,CAAEE,IAAP,MAAgB,WAApB,EAAiC;MAC/BJ,OAAO,CAACK,IAAD,CAAP;MACA;IACD;;IACDL,OAAO,CAACG,KAAD,CAAP;IACAN,aAAa,CAAC,KAAD,CAAb;EACD;;EAED,OACE,KAAC,IAAD;IAAM,KAAK,EAAES,MAAM,CAACC,SAApB;IAAA,UACE,KAAC,cAAD;MACE,KAAK,EAAER,IADT;MAEE,IAAI,EAAE,MAFR;MAGE,OAAO,EAAES,QAAQ,CAACC,EAAT,KAAgB,KAAhB,GAAwB,SAAxB,GAAoC,SAH/C;MAIE,QAAQ,EAAE,IAJZ;MAKE,QAAQ,EAAER,cALZ;MAME,KAAK,EAAEK,MAAM,CAACV;IANhB;EADF,EADF;AAYD;AAED,IAAMU,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;EAC/BJ,SAAS,EAAE;IACTK,IAAI,EAAE,CADG;IAETC,UAAU,EAAE,QAFH;IAGTC,cAAc,EAAE,QAHP;IAITC,eAAe,EAAE;EAJR,CADoB;EAO/BnB,UAAU,EAAE;IACVmB,eAAe,EAAE,SADP;IAEVC,KAAK,EAAE,KAFG;IAGVC,YAAY,EAAE,EAHJ;IAIVC,KAAK,EAAE,SAJG;IAKVC,QAAQ,EAAE,EALA;IAMVC,YAAY,EAAE,EANJ;IAOVC,WAAW,EAAE,SAPH;IAQVC,WAAW,EAAE,CARH;IASVC,OAAO,EAAE;EATC;AAPmB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}