{"ast":null,"code":"import { DIGIT, ALPHA, ALPHANUM, MINUTES, SECONDS, HOURS } from \"./constants\";\nimport addPlaceholder from \"./addPlaceholder\";\n\nfunction toPattern(value, optionPattern) {\n  var pattern = typeof optionPattern === 'object' ? optionPattern.pattern : optionPattern;\n  var patternChars = pattern.replace(/\\W/g, '');\n  var output = pattern.split('');\n  var values = value.toString().replace(/\\W/g, '');\n  var charsValues = values.replace(/\\W/g, '');\n  var placeholder = typeof optionPattern === 'object' ? optionPattern.placeholder : undefined;\n  var charCounter = 0;\n  var index;\n  var outputLength = output.length;\n\n  for (index = 0; index < outputLength; index++) {\n    if (charCounter >= values.length) {\n      if (patternChars.length === charsValues.length) {\n        return output.join('');\n      }\n\n      if (placeholder !== undefined && patternChars.length > charsValues.length) {\n        return addPlaceholder(output, index, placeholder).join('');\n      }\n\n      break;\n    } else if (output[index] === DIGIT && values[charCounter].match(/[0-9]/) || output[index] === ALPHA && values[charCounter].match(/[a-zA-Z]/) || output[index] === ALPHANUM && values[charCounter].match(/[0-9a-zA-Z]/) || output[index] === HOURS && values[charCounter].match(/[0-23]/) || output[index] === MINUTES && values[charCounter].match(/[0-59]/) || output[index] === SECONDS && values[charCounter].match(/[0-59]/)) {\n      output[index] = values[charCounter++];\n    } else if (output[index] === DIGIT || output[index] === ALPHA || output[index] === ALPHANUM || output[index] === HOURS || output[index] === MINUTES || output[index] === SECONDS) {\n      if (placeholder !== undefined) {\n        return addPlaceholder(output, index, placeholder).join('');\n      }\n\n      return output.slice(0, index).join('');\n    } else if (output[index] === values[charCounter]) {\n      charCounter++;\n    }\n  }\n\n  return output.join('').substr(0, index);\n}\n\nexport default toPattern;","map":{"version":3,"mappings":"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","names":["DIGIT","ALPHA","ALPHANUM","MINUTES","SECONDS","HOURS","addPlaceholder","toPattern","value","optionPattern","pattern","patternChars","replace","output","split","values","toString","charsValues","placeholder","undefined","charCounter","index","outputLength","length","join","match","slice","substr"],"sources":["toPattern.ts"],"sourcesContent":["import { DIGIT, ALPHA, ALPHANUM, MINUTES, SECONDS, HOURS } from './constants'\nimport addPlaceholder from './addPlaceholder'\n\ntype OptionPattern = {\n  pattern: string\n  placeholder: string\n}\n\n/**\n * function toPattern\n * @param {number | string} value\n * @param {string | OptionPattern} optionPattern\n * @returns {string}\n */\nfunction toPattern(\n  value: number | string,\n  optionPattern: string | OptionPattern\n): string {\n  const pattern =\n    typeof optionPattern === 'object' ? optionPattern.pattern : optionPattern\n  const patternChars = pattern.replace(/\\W/g, '')\n  const output = pattern.split('')\n  const values = value.toString().replace(/\\W/g, '')\n  const charsValues = values.replace(/\\W/g, '')\n  const placeholder =\n    typeof optionPattern === 'object' ? optionPattern.placeholder : undefined\n  let charCounter = 0\n  let index\n\n  const outputLength = output.length\n  for (index = 0; index < outputLength; index++) {\n    // Reached the end of input\n    if (charCounter >= values.length) {\n      if (patternChars.length === charsValues.length) {\n        return output.join('')\n      }\n      if (\n        placeholder !== undefined &&\n        patternChars.length > charsValues.length\n      ) {\n        return addPlaceholder(output, index, placeholder).join('')\n      }\n      break\n    } else if (\n      (output[index] === DIGIT && values[charCounter].match(/[0-9]/)) ||\n      (output[index] === ALPHA && values[charCounter].match(/[a-zA-Z]/)) ||\n      (output[index] === ALPHANUM &&\n        values[charCounter].match(/[0-9a-zA-Z]/)) ||\n      (output[index] === HOURS && values[charCounter].match(/[0-23]/)) ||\n      (output[index] === MINUTES && values[charCounter].match(/[0-59]/)) ||\n      (output[index] === SECONDS && values[charCounter].match(/[0-59]/))\n    ) {\n      output[index] = values[charCounter++]\n    } else if (\n      output[index] === DIGIT ||\n      output[index] === ALPHA ||\n      output[index] === ALPHANUM ||\n      output[index] === HOURS ||\n      output[index] === MINUTES ||\n      output[index] === SECONDS\n    ) {\n      if (placeholder !== undefined) {\n        return addPlaceholder(output, index, placeholder).join('')\n      }\n      return output.slice(0, index).join('')\n\n      // exact match for a non-magic character\n    } else if (output[index] === values[charCounter]) {\n      charCounter++\n    }\n  }\n  return output.join('').substr(0, index)\n}\n\nexport default toPattern\n"]},"metadata":{},"sourceType":"module"}